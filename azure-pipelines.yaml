# Azure DevOps Pipeline for Full-Stack App with Docker and Azure Deployment

trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  frontendImageName: 'aissms-frontend'
  backendImageName: 'aissms-backend'
  dockerRegistry: 'atharvaj1425' # e.g., atharvaj1425
  dockerRegistryServiceConnection: 'your-service-connection-name' # Define in Azure DevOps project settings

steps:
  # Step 1: Install Node.js for Both Frontend and Backend
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'

  # Step 2: Install Dependencies
  - script: |
      cd Backend
      npm install
    displayName: 'Install Backend Dependencies'

  - script: |
      cd Frontend
      npm install
    displayName: 'Install Frontend Dependencies'

  # Step 3: Run Backend & Frontend Tests (Optional)
  - script: |
      cd Backend
      npm run test || echo "Backend tests failed"
    displayName: 'Run Backend Tests'

  - script: |
      cd Frontend
      npm run test || echo "Frontend tests failed"
    displayName: 'Run Frontend Tests'

  # Step 4: Build Frontend & Backend
  - script: |
      cd Frontend
      npm run build
    displayName: 'Build Frontend'

  - script: |
      cd Backend
      npm run build || echo "No explicit backend build"
    displayName: 'Build Backend'

  # Step 5: Docker Build
  - task: Docker@2
    displayName: 'Build Frontend Docker Image'
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: $(dockerRegistry)/$(frontendImageName)
      command: build
      Dockerfile: Frontend/Dockerfile
      tags: latest

  - task: Docker@2
    displayName: 'Build Backend Docker Image'
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: $(dockerRegistry)/$(backendImageName)
      command: build
      Dockerfile: Backend/Dockerfile
      tags: latest

  # Step 6: Docker Push
  - task: Docker@2
    displayName: 'Push Frontend Docker Image'
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: $(dockerRegistry)/$(frontendImageName)
      command: push
      tags: latest

  - task: Docker@2
    displayName: 'Push Backend Docker Image'
    inputs:
      containerRegistry: $(dockerRegistryServiceConnection)
      repository: $(dockerRegistry)/$(backendImageName)
      command: push
      tags: latest

  # Step 7: Deploy
  - script: echo "ðŸš€ Deploy Backend here (Kubernetes, Azure App Service, etc.)"
    displayName: 'Deploy Backend'

  - script: echo "ðŸš€ Deploy Frontend here (Azure Static Web Apps, Vercel, etc.)"
    displayName: 'Deploy Frontend'
